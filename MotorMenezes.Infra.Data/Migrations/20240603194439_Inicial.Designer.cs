// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MotorMenezes.Infra.Data.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MotorMenezes.Infra.Data.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20240603194439_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ArquivoAgg.Entities.CondominioArquivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BlocoId")
                        .HasColumnType("integer");

                    b.Property<int>("CondominioId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Extensao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<Guid>("Identificador")
                        .HasColumnType("uuid");

                    b.Property<string>("NameArquivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("TipoArquivoId")
                        .HasColumnType("integer");

                    b.Property<int?>("UnidadeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BlocoId");

                    b.HasIndex("CondominioId");

                    b.HasIndex("TipoArquivoId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("CondominioArquivo");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ArquivoAgg.Entities.TipoArquivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("TipoArquivo");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.AvisoAgg.Entities.Aviso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CondominioId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(10000)
                        .HasColumnType("character varying(10000)");

                    b.Property<Guid?>("IdentificadorImagem")
                        .HasColumnType("uuid");

                    b.Property<int>("OrdemPrioridade")
                        .HasColumnType("integer");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCadastroId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("CondominioId");

                    b.ToTable("Aviso");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.BlocoAgg.Entities.Bloco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CondominioId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("UsuarioCadastroId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("CondominioId");

                    b.ToTable("Bloco");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.CNHTypeAgg.Entity.CNHType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Desctiption")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.ToTable("CNHType");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.CondominioAgg.Entities.Condominio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cnpj")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("IdentificadorImagem")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("UsuarioCadastroId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Condominio");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.EntregaAgg.Entities.EmpresaEntrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("EmpresaEntrega");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.EntregaAgg.Entities.Entrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cor")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataConfirmacaoMorador")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DescricaoProduto")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("EmpresaEntregaId")
                        .HasColumnType("integer");

                    b.Property<string>("Entregador")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("IdentificadorImagemAssinatura")
                        .HasColumnType("uuid");

                    b.Property<string>("Tamanho")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int?>("TipoEncomendaId")
                        .HasColumnType("integer");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("integer");

                    b.Property<string>("UsuarioCadastroId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("UsuarioMoradorId")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("UsuarioRetiradaId")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaEntregaId");

                    b.HasIndex("TipoEncomendaId");

                    b.HasIndex("UnidadeId");

                    b.HasIndex("UsuarioCadastroId");

                    b.HasIndex("UsuarioMoradorId");

                    b.HasIndex("UsuarioRetiradaId");

                    b.ToTable("Entrega");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.EntregaAgg.Entities.TipoEncomenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.ToTable("TipoEncomenda");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.OcorrenciaAgg.Entities.Ocorrencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CondominioId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataResolucao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DescricaoOcorrencia")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("DescricaoResolucao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Extensao")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<Guid>("Identificador")
                        .HasColumnType("uuid");

                    b.Property<string>("NameArquivo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("Resolvido")
                        .HasColumnType("boolean");

                    b.Property<int>("TipoOcorrenciaId")
                        .HasColumnType("integer");

                    b.Property<string>("UsuarioCadastroId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("UsuarioResolucaoId")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("CondominioId");

                    b.HasIndex("TipoOcorrenciaId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("Ocorrencia");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.OcorrenciaAgg.Entities.TipoOcorrencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoOcorrencia");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReservaAgg.Entities.ItemReserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AprovacaoAutomatica")
                        .HasColumnType("boolean");

                    b.Property<string>("Comentario")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("CondominioId")
                        .HasColumnType("integer");

                    b.Property<string>("Cor")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan>("HorarioFuncionamentoFim")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("HorarioFuncionamentoInicio")
                        .HasColumnType("interval");

                    b.Property<bool>("LimitadoPorData")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("TipoItemReservaId")
                        .HasColumnType("integer");

                    b.Property<string>("UsuarioCadastroId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CondominioId");

                    b.HasIndex("TipoItemReservaId");

                    b.ToTable("ItemReserva");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReservaAgg.Entities.ItemReservaTermoAceite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataFimVigencia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataInicioVigencia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ItemReservaId")
                        .HasColumnType("integer");

                    b.Property<string>("Termo")
                        .HasMaxLength(10000)
                        .HasColumnType("character varying(10000)");

                    b.Property<string>("UsuarioCadastroId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("ItemReservaId");

                    b.ToTable("ItemReservaTermoAceite");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReservaAgg.Entities.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aprovada")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataFinalReserva")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ItemReservaId")
                        .HasColumnType("integer");

                    b.Property<int?>("ItemReservaTermoAceiteId")
                        .HasColumnType("integer");

                    b.Property<string>("MotivoReprovacao")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("UsuarioCadastroId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("ItemReservaId");

                    b.HasIndex("ItemReservaTermoAceiteId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReservaAgg.Entities.TipoItemReserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("TipoItemReserva");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.AnexoReuniao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("ExtensaoArquivo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("NameArquivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("ReuniaoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReuniaoId");

                    b.ToTable("AnexoReuniao");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.Enquete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentario")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataEncerramento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("QuantidadeOpcoesPorVoto")
                        .HasColumnType("integer");

                    b.Property<int>("ReuniaoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoVotacao")
                        .HasColumnType("integer");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.HasIndex("ReuniaoId");

                    b.ToTable("Enquete");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.OpcaoVoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("EnqueteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EnqueteId");

                    b.ToTable("OpcaoVoto");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.Presenca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apartamento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Bloco")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("DataCheckin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataConfirmacaoPresenca")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ReuniaoId")
                        .HasColumnType("integer");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("ReuniaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Presenca");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.Reuniao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ata")
                        .HasMaxLength(5000)
                        .HasColumnType("character varying(5000)");

                    b.Property<string>("CodigoExterno")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<int>("CondominioId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataEncerramento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataLimiteCheckin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataReuniao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Link")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Pauta")
                        .HasMaxLength(5000)
                        .HasColumnType("character varying(5000)");

                    b.Property<bool>("Privada")
                        .HasColumnType("boolean");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("CondominioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reuniao");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.ReuniaoArquivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Extensao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<Guid>("Identificador")
                        .HasColumnType("uuid");

                    b.Property<string>("NameArquivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("ReuniaoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReuniaoId");

                    b.ToTable("ReuniaoArquivo");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.UsuarioVoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EnqueteId")
                        .HasColumnType("integer");

                    b.Property<int>("OpcaoVotoId")
                        .HasColumnType("integer");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("EnqueteId");

                    b.HasIndex("OpcaoVotoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioVoto");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.UnidadeAgg.Entities.Unidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apartamento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("BlocoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("FracaoIdeal")
                        .HasColumnType("real");

                    b.Property<string>("UsuarioCadastroId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("UsuarioMoradorId")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("BlocoId");

                    b.HasIndex("UsuarioMoradorId");

                    b.ToTable("Unidade");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.TipoMorador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("TipoMorador");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CNHImageId")
                        .HasColumnType("uuid");

                    b.Property<string>("CNHNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("CNHTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("CNHTypeId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.UsuarioCondominio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int>("CondominioId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("CondominioId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioCondominio");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.UsuarioServico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<Guid?>("Identificador")
                        .HasColumnType("uuid");

                    b.Property<string>("Instagram")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("Linkedin")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("Tiktok")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Whatsapp")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Youtube")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioServico");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.UsuarioUnidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataDesvinculacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TipoMoradorId")
                        .HasColumnType("integer");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("integer");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("TipoMoradorId");

                    b.HasIndex("UnidadeId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioUnidade");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.VeiculoAgg.Entities.Cor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Cor");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.VeiculoAgg.Entities.Garagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CondominioId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioCadastroId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Vaga")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("VeiculoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CondominioId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Garagem");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.VeiculoAgg.Entities.TipoVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoVeiculo");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.VeiculoAgg.Entities.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CondominioId")
                        .HasColumnType("integer");

                    b.Property<int?>("CorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MarcaModelo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Placa")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<int?>("TipoVeiculoId")
                        .HasColumnType("integer");

                    b.Property<int?>("UnidadeId")
                        .HasColumnType("integer");

                    b.Property<string>("UsuarioCadastroId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("Visitante")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CondominioId");

                    b.HasIndex("CorId");

                    b.HasIndex("TipoVeiculoId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("Veiculo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ArquivoAgg.Entities.CondominioArquivo", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.BlocoAgg.Entities.Bloco", "Bloco")
                        .WithMany()
                        .HasForeignKey("BlocoId");

                    b.HasOne("MotorMenezes.Domain.Aggregates.CondominioAgg.Entities.Condominio", "Condominio")
                        .WithMany()
                        .HasForeignKey("CondominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.ArquivoAgg.Entities.TipoArquivo", "TipoArquivo")
                        .WithMany()
                        .HasForeignKey("TipoArquivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.UnidadeAgg.Entities.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId");

                    b.Navigation("Bloco");

                    b.Navigation("Condominio");

                    b.Navigation("TipoArquivo");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.AvisoAgg.Entities.Aviso", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.CondominioAgg.Entities.Condominio", "Condominio")
                        .WithMany()
                        .HasForeignKey("CondominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Condominio");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.BlocoAgg.Entities.Bloco", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.CondominioAgg.Entities.Condominio", "Condominio")
                        .WithMany()
                        .HasForeignKey("CondominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Condominio");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.EntregaAgg.Entities.Entrega", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.EntregaAgg.Entities.EmpresaEntrega", "EmpresaEntrega")
                        .WithMany()
                        .HasForeignKey("EmpresaEntregaId");

                    b.HasOne("MotorMenezes.Domain.Aggregates.EntregaAgg.Entities.TipoEncomenda", "TipoEncomenda")
                        .WithMany()
                        .HasForeignKey("TipoEncomendaId");

                    b.HasOne("MotorMenezes.Domain.Aggregates.UnidadeAgg.Entities.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", "UsuarioMorador")
                        .WithMany()
                        .HasForeignKey("UsuarioMoradorId");

                    b.HasOne("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", "UsuarioRetirada")
                        .WithMany()
                        .HasForeignKey("UsuarioRetiradaId");

                    b.Navigation("EmpresaEntrega");

                    b.Navigation("TipoEncomenda");

                    b.Navigation("Unidade");

                    b.Navigation("UsuarioCadastro");

                    b.Navigation("UsuarioMorador");

                    b.Navigation("UsuarioRetirada");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.OcorrenciaAgg.Entities.Ocorrencia", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.CondominioAgg.Entities.Condominio", "Condominio")
                        .WithMany()
                        .HasForeignKey("CondominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.OcorrenciaAgg.Entities.TipoOcorrencia", "TipoOcorrencia")
                        .WithMany()
                        .HasForeignKey("TipoOcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Condominio");

                    b.Navigation("TipoOcorrencia");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReservaAgg.Entities.ItemReserva", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.CondominioAgg.Entities.Condominio", "Condominio")
                        .WithMany()
                        .HasForeignKey("CondominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.ReservaAgg.Entities.TipoItemReserva", "TipoItemReserva")
                        .WithMany()
                        .HasForeignKey("TipoItemReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Condominio");

                    b.Navigation("TipoItemReserva");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReservaAgg.Entities.ItemReservaTermoAceite", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.ReservaAgg.Entities.ItemReserva", "ItemReserva")
                        .WithMany("ListaItemReservaTermoAceite")
                        .HasForeignKey("ItemReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemReserva");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReservaAgg.Entities.Reserva", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.ReservaAgg.Entities.ItemReserva", "ItemReserva")
                        .WithMany()
                        .HasForeignKey("ItemReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.ReservaAgg.Entities.ItemReservaTermoAceite", "ItemReservaTermoAceite")
                        .WithMany()
                        .HasForeignKey("ItemReservaTermoAceiteId");

                    b.HasOne("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemReserva");

                    b.Navigation("ItemReservaTermoAceite");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.AnexoReuniao", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.Reuniao", "Reuniao")
                        .WithMany()
                        .HasForeignKey("ReuniaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reuniao");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.Enquete", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.Reuniao", "Reuniao")
                        .WithMany("ListaEnquete")
                        .HasForeignKey("ReuniaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reuniao");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.OpcaoVoto", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.Enquete", "Enquete")
                        .WithMany("ListaOpcoesVoto")
                        .HasForeignKey("EnqueteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enquete");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.Presenca", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.Reuniao", "Reuniao")
                        .WithMany("ListaPresenca")
                        .HasForeignKey("ReuniaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reuniao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.Reuniao", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.CondominioAgg.Entities.Condominio", "Condominio")
                        .WithMany()
                        .HasForeignKey("CondominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Condominio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.ReuniaoArquivo", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.Reuniao", "Reuniao")
                        .WithMany()
                        .HasForeignKey("ReuniaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reuniao");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.UsuarioVoto", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.Enquete", "Enquete")
                        .WithMany()
                        .HasForeignKey("EnqueteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.OpcaoVoto", "OpcaoVoto")
                        .WithMany()
                        .HasForeignKey("OpcaoVotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enquete");

                    b.Navigation("OpcaoVoto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.UnidadeAgg.Entities.Unidade", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.BlocoAgg.Entities.Bloco", "Bloco")
                        .WithMany()
                        .HasForeignKey("BlocoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", "UsuarioMorador")
                        .WithMany()
                        .HasForeignKey("UsuarioMoradorId");

                    b.Navigation("Bloco");

                    b.Navigation("UsuarioMorador");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.CNHTypeAgg.Entity.CNHType", "CNHType")
                        .WithMany()
                        .HasForeignKey("CNHTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CNHType");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.UsuarioCondominio", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.CondominioAgg.Entities.Condominio", "Condominio")
                        .WithMany()
                        .HasForeignKey("CondominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Condominio");

                    b.Navigation("Role");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.UsuarioServico", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.UsuarioUnidade", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.TipoMorador", "TipoMorador")
                        .WithMany()
                        .HasForeignKey("TipoMoradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.UnidadeAgg.Entities.Unidade", "Unidade")
                        .WithMany("ListaUsuarioUnidade")
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoMorador");

                    b.Navigation("Unidade");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.VeiculoAgg.Entities.Garagem", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.CondominioAgg.Entities.Condominio", "Condominio")
                        .WithMany()
                        .HasForeignKey("CondominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.VeiculoAgg.Entities.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId");

                    b.Navigation("Condominio");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.VeiculoAgg.Entities.Veiculo", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.CondominioAgg.Entities.Condominio", "Condominio")
                        .WithMany()
                        .HasForeignKey("CondominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.VeiculoAgg.Entities.Cor", "Cor")
                        .WithMany()
                        .HasForeignKey("CorId");

                    b.HasOne("MotorMenezes.Domain.Aggregates.VeiculoAgg.Entities.TipoVeiculo", "TipoVeiculo")
                        .WithMany()
                        .HasForeignKey("TipoVeiculoId");

                    b.HasOne("MotorMenezes.Domain.Aggregates.UnidadeAgg.Entities.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId");

                    b.Navigation("Condominio");

                    b.Navigation("Cor");

                    b.Navigation("TipoVeiculo");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MotorMenezes.Domain.Aggregates.UsuarioAgg.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReservaAgg.Entities.ItemReserva", b =>
                {
                    b.Navigation("ListaItemReservaTermoAceite");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.Enquete", b =>
                {
                    b.Navigation("ListaOpcoesVoto");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.ReuniaoAgg.Entities.Reuniao", b =>
                {
                    b.Navigation("ListaEnquete");

                    b.Navigation("ListaPresenca");
                });

            modelBuilder.Entity("MotorMenezes.Domain.Aggregates.UnidadeAgg.Entities.Unidade", b =>
                {
                    b.Navigation("ListaUsuarioUnidade");
                });
#pragma warning restore 612, 618
        }
    }
}
